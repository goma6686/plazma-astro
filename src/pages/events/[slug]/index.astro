---
import { type CollectionEntry, getCollection } from "astro:content";
import EventDetails from "@layouts/event/EventDetails.astro";
import getSortedEvents from "@utils/events/getSortedEventsDesc";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import Events from "@layouts/event/Events.astro";

export interface Props {
  event: CollectionEntry<"event">;
}
export async function getStaticPaths() {
  const events = await getCollection("event");

  const eventResult = events.map(event => ({
    params: { slug: event.slug },
    props: { event },
  }));

  const pagePaths = getPageNumbers(events.length, "event").map(pageNum => ({
    params: { slug: String(pageNum) },
  }));
  return [...eventResult, ...pagePaths];
}

const { slug } = Astro.params;
const { event } = Astro.props;

const eventsCol = await getCollection("event");
const sortedEvents = getSortedEvents(eventsCol);

const pagination = getPagination({
  items: sortedEvents,
  page: slug,
  collection: "events",
});
---

{event ? <EventDetails event={event} /> : <Events {...pagination} />}
