---
export const prerender = true;
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/post/Posts.astro";
import PostDetails from "@layouts/post/PostDetails.astro";
import getSortedPosts from "@utils/posts/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"post">;
}

export async function getStaticPaths() {
  const posts = await getCollection("post"); //, ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length, "post").map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("post");

const sortedPosts = getSortedPosts(posts);

const pagination = getPagination({
  items: sortedPosts,
  page: slug,
  collection: "posts",
});
---

{post ? <PostDetails post={post} /> : <Posts {...pagination} />}
