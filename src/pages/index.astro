---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Card from "@components/Card";
import EventCard from "@components/EventCard";
import getSortedPosts from "@utils/posts/getSortedPosts";
import getSortedEvents from "@utils/events/getSortedEvents";
import { YouTube } from "astro-embed";
const posts = await getCollection("post");
const events = await getCollection("event");

const sortedPosts = getSortedPosts(posts);
const sortedEvents = getSortedEvents(events); //isrikiuoja pagal data
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);
const recentEvents = sortedEvents.filter(({ data }) => {
  // Get current date at midnight
  const now = new Date();
  now.setHours(0, 0, 0, 0);
  const eventDate = new Date(data.eventDatetime);
  return eventDate >= now;
});

const pastEvents = sortedEvents.filter(({ data }) => {
  // Get current date at midnight
  const now = new Date();
  now.setHours(0, 0, 0, 0);
  const eventDate = new Date(data.eventDatetime);
  return eventDate < now;
});
---

<Layout>
  <Header />
  <main>
    <article id="posts">
      <aside id="sidebar" class="related">
        {
          recentEvents.length > 0 && (
            <section class="item border px-6">
              <ul class="break-after-column ">
                {recentEvents.map(
                  ({ data, slug }, index) =>
                    index < 3 && (
                      <EventCard
                        href={`/events/${slug}/`}
                        frontmatter={data}
                        drawLine={index < 2}
                      />
                    )
                )}
              </ul>
            </section>
          )
        }
        {
          recentEvents.length === 0 && (
            <section class="item border px-6">
              <ul class="break-after-column ">
                {pastEvents.map(
                  ({ data, slug }, index) =>
                    index < 3 && (
                      <EventCard
                        href={`/events/${slug}/`}
                        frontmatter={data}
                        drawLine={index < 2}
                      />
                    )
                )}
              </ul>
            </section>
          )
        }
      </aside>
      <div class="content">
        {
          featuredPosts.length > 0 && (
            <>
              <section id="featured">
                <h2>Featured</h2>
                <ul>
                  {featuredPosts.map(({ data, slug }) => (
                    <Card href={`/posts/${slug}/`} frontmatter={data} />
                  ))}
                </ul>
              </section>
            </>
          )
        }
        {
          recentPosts.length > 0 && (
            <section id="recent-posts">
              <ul>
                {recentPosts.map(({ data, slug }, index) =>
                  index < 4 && data.video ? (
                    <div class="w-full">
                      <Card href={`/posts/${slug}/`} frontmatter={data} />
                      <div class="w-2/3 mx-auto">
                        <YouTube id={data.video} />
                      </div>
                    </div>
                  ) : (
                    <Card href={`/posts/${slug}/`} frontmatter={data} />
                  )
                )}
              </ul>
            </section>
          )
        }
      </div>
    </article>
    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts/">
        All
        <svg xmlns="http://www.w3.org/2000/svg"
          ><path
            d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
          ></path>
        </svg>
      </LinkButton>
    </div>
  </main>
  <Footer />
</Layout>

<style>
  .box {
    background-color: #444;
    color: #fff;
  }

  body {
    @apply max-w-7xl;
    margin: 0 auto;
  }

  @media only screen and (min-width: 48em) {
    article {
      display: flex;
      /*grid-template-columns: 1fr 3fr;
      column-gap: 2em;*/
    }

    #sidebar {
      @apply flex-none w-1/4;
      padding-left: 1em;
      padding-top: 2em;
    }

    .content {
      @apply flex-initial w-2/3 mx-auto;
    }
  }

  @media only screen and (max-width: 48em) {
    #sidebar {
      @apply px-8 py-6;
    }

    #sidebar .item {
      @apply w-3/4 mx-auto;
    }
    .content {
      @apply w-3/4 mx-auto;
    }
  }

  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-6;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-6 text-center;
  }
</style>
