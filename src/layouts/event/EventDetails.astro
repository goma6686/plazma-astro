---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@config";
export interface Props {
  event: CollectionEntry<"event">;
}
const { event } = Astro.props;
const {
  title,
  description,
  eventDatetime,
  eventEndDatetime,
  eventImage,
  location,
} = event.data;
const { Content } = await event.render();
const layoutProps = {
  title: `${title} | ${SITE.title}`,
  description,
  eventDatetime,
  scrollSmooth: true,
};

const startDate = new Date(eventDatetime);
const endDate = new Date(eventEndDatetime);

const formatDate = (date: Date) => {
  return date.toISOString().split("T")[0];
};

const formatTime = (date: Date) => {
  return date.toLocaleTimeString("lt-LT", {
    hour: "2-digit",
    minute: "2-digit",
    hour12: false,
    timeZone: "Europe/Vilnius",
  });
};

const calendarData = {
  title,
  description,
  location: location || "",
  startDate: formatDate(startDate),
  startTime: formatTime(startDate),
  endDate: formatDate(endDate),
  endTime: formatTime(endDate),
};
---

<Layout {...layoutProps}>
  <Header />
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button
      class="focus-outline mb-2 mt-8 flex hover:opacity-75"
      onclick="(() => (history.length === 1) ? window.location = '/' : history.back())()"
    >
      <svg xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>Go back</span>
    </button>
  </div>
  <main id="main-content">
    <h3 class="post-title">{title}</h3>

    <Datetime
      itemDatetime={eventDatetime}
      eventEndDatetime={eventEndDatetime}
      title={title}
      description={description}
      location={location}
      size="lg"
      className="my-2"
    />
    <img src={eventImage} class="img-fluid event-post-image mx-auto rounded" />
    <article id="article" role="article" class="prose mx-auto mt-8 max-w-5xl">
      <p>{description}</p>
      <Content />
    </article>
  </main>
</Layout>
<Footer />

<script
  src="https://cdn.jsdelivr.net/npm/add-to-calendar-button@2.4.1/dist/atcb.min.js"
  defer></script>

<script is:inline define:vars={{ calendarData }}>
  document.addEventListener("DOMContentLoaded", function () {
    if (typeof atcb_action === "undefined") {
      window.addEventListener("load", setupCalendarButton);
    } else {
      setupCalendarButton();
    }
  });

  function setupCalendarButton() {
    const config = {
      name: calendarData.title,
      description: calendarData.description,
      location: calendarData.location,
      startDate: calendarData.startDate,
      startTime: calendarData.startTime,
      endDate: calendarData.endDate,
      endTime: calendarData.endTime,
      options: ["Apple", "Google"],
      timeZone: "Europe/Vilnius",
    };

    const button = document.getElementById("add-to-calendar-button");
    if (button && typeof atcb_action === "function") {
      button.addEventListener("click", () => atcb_action(config, button));
    }
  }
</script>
